==26516== Memcheck, a memory error detector
==26516== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==26516== Using Valgrind-3.14.0 and LibVEX; rerun with -h for copyright info
==26516== Command: ./21sh
==26516== Parent PID: 26203
==26516== 
==26516== Conditional jump or move depends on uninitialised value(s)
==26516==    at 0x10001B721: ft_strpbrk (in ./21sh)
==26516==    by 0x1000067A1: sh_lexer_exp_recursive (in ./21sh)
==26516==    by 0x100006727: sh_lexer_exp (in ./21sh)
==26516==    by 0x10000629C: lexer_rule5 (in ./21sh)
==26516==    by 0x1000059C6: sh_lexer (in ./21sh)
==26516==    by 0x10000142E: sh_process_command (in ./21sh)
==26516==    by 0x100003339: sh_process_read_canonical_mode (in ./21sh)
==26516==    by 0x1000032E3: sh_process_canonical_mode (in ./21sh)
==26516==    by 0x10000160E: main (in ./21sh)
==26516== 
==26516== Use of uninitialised value of size 8
==26516==    at 0x10001B72B: ft_strpbrk (in ./21sh)
==26516==    by 0x1000067A1: sh_lexer_exp_recursive (in ./21sh)
==26516==    by 0x100006727: sh_lexer_exp (in ./21sh)
==26516==    by 0x10000629C: lexer_rule5 (in ./21sh)
==26516==    by 0x1000059C6: sh_lexer (in ./21sh)
==26516==    by 0x10000142E: sh_process_command (in ./21sh)
==26516==    by 0x100003339: sh_process_read_canonical_mode (in ./21sh)
==26516==    by 0x1000032E3: sh_process_canonical_mode (in ./21sh)
==26516==    by 0x10000160E: main (in ./21sh)
==26516== 
==26516== Invalid read of size 1
==26516==    at 0x10001B72B: ft_strpbrk (in ./21sh)
==26516==    by 0x1000067A1: sh_lexer_exp_recursive (in ./21sh)
==26516==    by 0x100006727: sh_lexer_exp (in ./21sh)
==26516==    by 0x10000629C: lexer_rule5 (in ./21sh)
==26516==    by 0x1000059C6: sh_lexer (in ./21sh)
==26516==    by 0x10000142E: sh_process_command (in ./21sh)
==26516==    by 0x100003339: sh_process_read_canonical_mode (in ./21sh)
==26516==    by 0x1000032E3: sh_process_canonical_mode (in ./21sh)
==26516==    by 0x10000160E: main (in ./21sh)
==26516==  Address 0x4 is not stack'd, malloc'd or (recently) free'd
==26516== 
==26516== 
==26516== Process terminating with default action of signal 11 (SIGSEGV)
==26516==  Access not within mapped region at address 0x4
==26516==    at 0x10001B72B: ft_strpbrk (in ./21sh)
==26516==    by 0x1000067A1: sh_lexer_exp_recursive (in ./21sh)
==26516==    by 0x100006727: sh_lexer_exp (in ./21sh)
==26516==    by 0x10000629C: lexer_rule5 (in ./21sh)
==26516==    by 0x1000059C6: sh_lexer (in ./21sh)
==26516==    by 0x10000142E: sh_process_command (in ./21sh)
==26516==    by 0x100003339: sh_process_read_canonical_mode (in ./21sh)
==26516==    by 0x1000032E3: sh_process_canonical_mode (in ./21sh)
==26516==    by 0x10000160E: main (in ./21sh)
==26516==  If you believe this happened as a result of a stack
==26516==  overflow in your program's main thread (unlikely but
==26516==  possible), you can try to increase the size of the
==26516==  main thread stack using the --main-stacksize= flag.
==26516==  The main thread stack size used in this run was 8388608.
==26516== 
==26516== HEAP SUMMARY:
==26516==     in use at exit: 334,034 bytes in 827 blocks
==26516==   total heap usage: 5,440 allocs, 4,613 frees, 511,210 bytes allocated
==26516== 
==26516== LEAK SUMMARY:
==26516==    definitely lost: 0 bytes in 0 blocks
==26516==    indirectly lost: 0 bytes in 0 blocks
==26516==      possibly lost: 0 bytes in 0 blocks
==26516==    still reachable: 315,888 bytes in 667 blocks
==26516==         suppressed: 18,146 bytes in 160 blocks
==26516== Reachable blocks (those to which a pointer was found) are not shown.
==26516== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==26516== 
==26516== For counts of detected and suppressed errors, rerun with: -v
==26516== Use --track-origins=yes to see where uninitialised values come from
==26516== ERROR SUMMARY: 3 errors from 3 contexts (suppressed: 13 from 13)
